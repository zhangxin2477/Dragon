<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- 第一种方法配置sessionFactory <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="configLocation" value="classpath:config/hibernate.cfg.xml"></property> 
		</bean> -->
	<!-- 第二种方法配置sessionFactory -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/dragon"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop><!-- MySQL5InnoDBDialect -->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.autoReconnect">true</prop>
			</props>
		</property>
		<!-- 包扫描的方式加载注解类 <property name="mappingDirectoryLocations"> <list> <value>classpath:com/zx/entity/</value> 
			</list> </property> -->
		<property name="annotatedClasses">
			<list>
				<value>com.zx.entity.Theme</value>
				<value>com.zx.entity.Classify</value>
				<value>com.zx.entity.Users</value>
				<value>com.zx.entity.SUsers</value>
				<value>com.zx.entity.Article</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--配置事务 事务细节 ：事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED"
				no-rollback-for="myException" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置参与事务的类 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.zx.*.*(..))"
			id="daoMethod" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="daoMethod" />
	</aop:config>

	<bean id="ThemeDAO" class="com.zx.dao.impl.ThemeDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="ClassifyDAO" class="com.zx.dao.impl.ClassifyDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="UserDAO" class="com.zx.dao.impl.UserDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="ArticleDAO" class="com.zx.dao.impl.ArticleDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- -->
	<bean id="themeService" class="com.zx.service.impl.ThemeService">
		<property name="themeDaoInterface">
			<ref bean="ThemeDAO" />
		</property>
	</bean>

	<bean id="classifyService" class="com.zx.service.impl.ClassifyService">
		<property name="classifyDaoInterface">
			<ref bean="ClassifyDAO" />
		</property>
	</bean>

	<bean id="userService" class="com.zx.service.impl.UserService">
		<property name="userDaoInterface">
			<ref bean="UserDAO" />
		</property>
	</bean>

	<bean id="articleService" class="com.zx.service.impl.ArticleService">
		<property name="articleDaoInterface">
			<ref bean="ArticleDAO" />
		</property>
	</bean>

	<!-- spring管理struts2的Action prototype解决单例问题 -->
	<bean id="mainAction" class="com.zx.action.MainAction" scope="prototype">
		<property name="classifyServiceInterface" ref="classifyService" />
		<property name="themeServiceInterface" ref="themeService" />
	</bean>

	<bean id="themeAction" class="com.zx.action.ThemeAction" scope="prototype">
		<property name="themeServiceInterface" ref="themeService" />
	</bean>
	<bean id="classifyAction" class="com.zx.action.ClassifyAction"
		scope="prototype">
		<property name="classifyServiceInterface" ref="classifyService" />
	</bean>
	<bean id="userAction" class="com.zx.action.UserAction" scope="prototype">
		<property name="userServiceInterface" ref="userService" />
		<property name="classifyServiceInterface" ref="classifyService" />
	</bean>
	<bean id="articleAction" class="com.zx.action.ArticleAction"
		scope="prototype">
		<property name="articleServiceInterface" ref="articleService" />
	</bean>

	<bean id="publishAction" class="com.zx.action.PublishAction"
		scope="prototype" />
	<bean id="contentAction" class="com.zx.action.ContentAction"
		scope="prototype" />
	<bean id="managerAction" class="com.zx.action.ManagerAction"
		scope="prototype">
		<property name="userServiceInterface" ref="userService" />
	</bean>
</beans>